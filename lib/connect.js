// Generated by CoffeeScript 1.11.1
(function() {
  var Crater, Promise, colors, mongoose;

  mongoose = require('mongoose');

  Promise = require('bluebird');

  mongoose.Promise = Promise;

  colors = require('colors');

  Crater = require('./Crater');

  module.exports = function(url) {
    if (url == null) {
      url = 'mongodb://localhost/crater';
    }
    return new Promise(function(resolve, reject) {
      if (mongoose.connection.readyState > 0) {
        return resolve(mongoose.connection);
      } else {
        mongoose.connection.on('error', function(error) {
          return console.error(colors.bgGreen.red("Database error: " + error));
        });
        mongoose.connection.once('open', function(callback) {
          return console.log(colors.bgGreen.black('Database connected'));
        });
        mongoose.connection.once('disconnected', function() {
          return console.log(colors.bgGreen.red('Mongoose has been disconnected'));
        });
        if (!mongoose.modelNames().length) {
          Crater.getModels();
          mongoose.connection.once('open', function(callback) {
            return Crater.getSchema('Customer').statics.getAllNameRegexString(true);
          });
        }
        return mongoose.connect(url).then(function() {
          return resolve(mongoose);
        });
      }
    })["catch"](function(e) {
      return console.log(e.stack);
    });
  };

}).call(this);
